const LAYER="SFEViewer: ";import{OptionsHandler}from"./modules/OptionsHandler.js";import{Object3DHandler}from"./modules/Object3DHandler.js";import{VueUIModeler}from"./modules/VueUIModeler.js";import{ViewerController}from"./modules/ViewerController.js";var Make=new SFE.ComponentsMaker;SFE.Viewer=class{constructor(userOptions=null){if(void 0===window.USERDATA)throw Error(LAYER+"USERDATA REQUIRED");this.userOptions=userOptions,this.options,this.container,this.Loader,this.VueUI,this.VueData,this.stats,this.VueCanvas,this.Sequence,this.targetSequence,this.canvas,this.scene,this.renderer,this.camera,this.controls,this.light,this.models,this.helpers,this.clock,this.frameClock,this.mixers,this.effects={},this.Controller,this.Assets}init(){if(this.startLoad(),!THREE.WEBGL.isWebGLAvailable())throw THREE.WEBGL.getWebGLErrorMessage(),Error(LAYER+"WEBGL SUPPORTED BROWSER REQUIRED");console.log(LAYER+"SFE Viewer v0.0.1. based on three.js r97"),console.log(LAYER+"WebGL2:",THREE.WEBGL.isWebGL2Available()),this.getOptions(this.userOptions).then(result=>{this.options=result,this.container=this.getContainer(),this.makeSequence(),this.makeComponents(),this.makeVueUI(),this.loadAssets(),this.animate()})}startLoad(){this.Loader=new SFE.LoadingManager,this.Loader.start()}async getOptions(userOptions){const Options=new OptionsHandler,userConfig=userOptions.global.userConfig;let options;return options=userConfig?await Options.getConfig(userOptions.global.userConfig):await Options.getDefault(),userOptions&&(options=Options.assignNew(options,userOptions)),!0===options.global.useUrlOptions&&(options=Options.getFromUrl(options)),console.log(LAYER+"Options:",options),options}getContainer(){let containerId=this.options.global.containerId;"#"!==containerId.substring(0,1)&&(containerId="#"+containerId);let container=document.querySelector(containerId);if(!container||0===container.length)throw console.error("containerId:",this.options.global.containerId),Error(LAYER+"CONTAINER IS NOT EXIST");return container}makeSequence(target=0){this.Sequence={container:this.container,target:target,scenes:[],timeline:[]};var options=this.options,canvasId="viewer3d_render",canvas=this.makeCanvas(canvasId),scene,renderer,camera,targetScene={canvas:canvas,scene:Make.Scene(options.scene),renderer:Make.WebGLRenderer(options.renderer,canvas),camera:Make.PerspectiveCamera(options.camera,canvas)};this.Sequence.scenes.push(targetScene),this.targetSequence=this.Sequence.scenes[target],this.canvas=this.targetSequence.canvas,this.scene=this.targetSequence.scene,this.renderer=this.targetSequence.renderer,this.camera=this.targetSequence.camera}makeCanvas(canvasId="viewer3d_render"){var container=this.container;return this.VueCanvas=new Vue({el:"#"+canvasId,data:{data:{name:"canvas",id:canvasId,use:!0,display:!0,type:"WebGL",ready:!1,events:{},blur:16,smooth:!0,fitScreen:!0,aspectRatio:"auto",width:0,height:0}},template:'<canvas id="viewer3d_render" :class="classes" :style="styles"></canvas>',computed:{classes:function(){var aspectRatio=this.data.aspectRatio,maxwidth=!1,maxheight=!1;if(!0===this.data.fitScreen)if("auto"===aspectRatio)maxwidth=!0,maxheight=!0;else{if(0===this.data.width||0===this.data.height)return!1;var screenRatio=container.clientHeight/container.clientWidth;this.data.width===this.data.height?container.clientWidth===container.clientHeight?(maxwidth=!0,maxheight=!0):container.clientWidth>container.clientHeight?maxheight=!0:container.clientWidth<container.clientHeight&&(maxwidth=!0):this.data.width>this.data.height?aspectRatio===screenRatio?(maxwidth=!0,maxheight=!0):aspectRatio<screenRatio?maxwidth=!0:aspectRatio>screenRatio&&(maxheight=!0):this.data.width<this.data.height&&(aspectRatio===screenRatio?(maxwidth=!0,maxheight=!0):aspectRatio<screenRatio?maxheight=!0:aspectRatio>screenRatio&&(maxwidth=!0))}return[this.data.type,{smooth:this.data.smooth,ready:this.data.ready,maxwidth:maxwidth,maxheight:maxheight}]},styles:function(){if(!0===this.data.smooth&&this.data.blur>=0)return"filter:blur("+this.data.blur+"px)"}}}),this.VueCanvas.$el}makeComponents(){this.Loader.progress.initialize=25,this.Loader.changeStatus(),this.Assets=new SFE.AssetsManager(this),this.models={},this.clock=new THREE.Clock,this.frameClock=new THREE.Clock,this.mixers=[],this.helpers=new THREE.Group,this.helpers.name="Helpers",this.scene.add(this.helpers);var dummyBox=new THREE.Mesh(new THREE.BoxGeometry(30,30,30),new THREE.MeshBasicMaterial({color:65280,wireframe:!0})),dummySphere=new THREE.Mesh(new THREE.SphereGeometry(10),new THREE.MeshBasicMaterial({color:65280,wireframe:!0})),controlsOptions=this.options.controls;controlsOptions.container=this.container,this.controls=Make.OrbitControls(this.camera,controlsOptions);var lightOptions=this.options.light,DLightOptions=lightOptions.directionalLight;SFE.isEmpty(DLightOptions)||(this.scene=Make.DirectionalLight(this.scene,DLightOptions));var ALightOptions=lightOptions.ambientLight;SFE.isEmpty(ALightOptions)||(this.scene=Make.AmbientLight(this.scene,ALightOptions));var HLightOptions=lightOptions.hemisphereLight;SFE.isEmpty(HLightOptions)||(this.scene=Make.HemisphereLight(this.scene,HLightOptions));var groundMeshOptions=this.options.groundMesh,observer;SFE.isEmpty(groundMeshOptions)||(this.scene=Make.GroundMesh(this.scene,groundMeshOptions)),this.VueCanvas.data.width=this.VueCanvas.$el.width,this.VueCanvas.data.height=this.VueCanvas.$el.height,new MutationObserver((mutationsList,observer)=>{for(var mutation of mutationsList)"attributes"==mutation.type&&("width"===mutation.attributeName&&(this.VueCanvas.data.width=mutation.target.width),"height"===mutation.attributeName&&(this.VueCanvas.data.height=mutation.target.height))}).observe(this.renderer.domElement,{attributes:!0});var outlineOptions=this.options.effect.outline;this.effects.outline=new THREE.OutlineEffect.Custom(this.renderer,outlineOptions),window.addEventListener("resize",this.onWindowResize.bind(this),!1)}makeVueUI(){this.Loader.progress.initialize=50,this.Loader.changeStatus(),void 0===window.VIEWMODEL&&(window.VIEWMODEL={}),void 0===window.VIEWMODEL.VueUI&&(window.VIEWMODEL.VueUI={});const uiOptions=this.options.ui,UI=new VueUIModeler(this);this.VueUI=UI.makeVueUI(),this.VueData=UI.VueData,this.stats=new THREE.Stats,this.stats.info=this.VueData.stats,!1===this.stats.info?uiOptions.stats.use=!1:this.defineStatData(),window.VIEWMODEL.VueUI[USERDATA.info.appId]=this.VueUI,console.log(LAYER+"VueData:",this.VueData),this.Controller=new ViewerController(this)}loadAssets(){var firstLoad=!0;for(var index in this.options.models){var modelOption=this.options.models[index],model=this.Assets.makeModel(modelOption.name,modelOption.category,modelOption.relativePath);this.loadModel(model,modelOption,firstLoad),firstLoad=!1}}async loadModel(model,options=null,firstLoad=!1){!0===firstLoad&&(this.Loader.progress.initialize=100,await this.Loader.changeStatus()),options||(options=this.options.defaultModel);const fileName=model.name,Assets=this.Assets,Loader=this.Loader,Controller=this.Controller;var Object3D=new Object3DHandler;model.onStart=function(){Loader.queue.push(new Promise(resolve=>{model.onLoad=function(){setTimeout(function(){resolve(!0)},0)}}))},model.onProgress=function(){Loader.changeFileProgress(this)};var modelData=await model.load();if(modelData=Object3D.ready(modelData,Assets,options),this.scene.add(modelData),this.models[fileName]=modelData,this.stats.refresh=!0,modelData.animations){modelData.mixer=new THREE.AnimationMixer(modelData),this.mixers.push(modelData.mixer);const action=modelData.mixer.clipAction(modelData.animations[0]);modelData.mixer.action=action,modelData.mixer.addEventListener("loop",function(event){void 0!==this.action.onLoop&&"function"==typeof this.action.onLoop&&this.action.onLoop(event,this)}),modelData.mixer.addEventListener("finished",function(event){void 0!==this.action.onLoop&&"function"==typeof this.action.onLoop&&this.action.onLoop(event,this)}),modelData.mixer.action.onLoop=function(event,data){var loopMode=Controller.player.loopMode;if("once"===loopMode)Controller.player.paused=!0;else{if("repeat"===loopMode)return!1;"pingpong"===loopMode&&(!1===Controller.player.reverse?Controller.player.reverse=!0:Controller.player.reverse=!1,Controller.V3Daction.enabled=!0,Controller.V3Daction.paused=!1)}},modelData.mixer.action.play(),modelData.mixer.action.paused=!0}!0===firstLoad&&(await Promise.all(Loader.queue),this.Loader.progress.make_assets=50,this.Loader.changeStatus(),console.log(LAYER+"Assets:",this.Assets),console.log(LAYER+"Sequence:",this.Sequence),console.log(LAYER+"LOADING COMPLETE"),this.Loader.progress.make_assets=100,await this.Loader.finish(),await SFE.wait(100),Controller.readyUI(),await Controller.readyPlayer(modelData)),modelData=Object3D.add(modelData,Assets,options)}animate(){if(requestAnimationFrame(this.animate.bind(this)),this.mixers.length>0){var reverse=this.Controller.player.reverse;if("frame"===this.Controller.player.playMode){var frameTime,timeScale,targetTime=this.Controller.SFEAnimation.frameTime/this.Controller.SFEAction.timeScale;this.frameClock.getDelta();var elapsedTime=this.frameClock.elapsedTime;if(!1===reverse){if(Number(elapsedTime.toFixed(2))>=Number(targetTime.toFixed(2))){for(var i=0;i<this.mixers.length;i++)this.mixers[i].update(targetTime);this.frameClock.elapsedTime=0}}else if(!0===reverse&&(elapsedTime=0-elapsedTime,targetTime=0-targetTime,Number(elapsedTime.toFixed(2))<=Number(targetTime.toFixed(2)))){for(var i=0;i<this.mixers.length;i++)this.mixers[i].update(targetTime);this.frameClock.elapsedTime=0}}else{var targetTime=this.clock.getDelta();!0===reverse&&(targetTime=0-targetTime);for(var i=0;i<this.mixers.length;i++)this.mixers[i].update(targetTime)}}this.camera.update(),this.controls.update(),TWEEN.update(),"SkinMorphTest.fbx"===this.options.models[0].name&&this.skinMorphTest(),this.render(),!0===this.options.ui.stats.use&&(this.stats.refresh=!0,this.updateStatData()),SFE.isEmpty(this.models)||!0!==this.Controller.player.use||this.Controller.updatePlayer()}skinMorphTest(){const modelData=this.Assets.models["SkinMorphTest.fbx"].data;if(null!==modelData){const triggerBone=modelData.bones.Rig_Cylinder_2;console.log(triggerBone)}}render(){for(var key in this.renderer.render(this.scene,this.camera),this.effects)this.effects[key].render(this.scene,this.camera)}defineStatData(){if(!1===this.options.ui.stats.use)return!1;if(!0===this.options.ui.stats.rendererInfo){var statInfo=this.stats.info,WebGLMode="WebGL1";1==this.renderer.capabilities.isWebGL2&&(WebGLMode="WebGL2"),statInfo.title=WebGLMode+": THREE."+this.renderer.constructor.name+" r"+THREE.REVISION}this.stats.refresh=!0,this.updateStatData()}updateStatData(){if(!1===this.options.ui.stats.use)return!1;var statList=this.options.ui.stats.data,data=this.stats.info.lists,context=this.renderer.context,renderInfo=this.renderer.info.render;function updateInfo(id,dataObject){!0===statList[id]&&(data[id]=dataObject)}this.stats.update(),!0===this.stats.refresh&&(updateInfo("bufferSize",context.drawingBufferWidth+" X "+context.drawingBufferHeight),updateInfo("drawCalls",renderInfo.calls),updateInfo("points",renderInfo.points),updateInfo("lines",renderInfo.lines),updateInfo("triangles",renderInfo.triangles),this.stats.refresh=!1),updateInfo("frameCount",renderInfo.frame),updateInfo("memory",Math.round(this.stats.memVal)+"MB / "+Math.round(this.stats.memMax)+"MB"),updateInfo("frameTime",Math.round(this.stats.ftime)+"MS"),updateInfo("FPS",Math.round(this.stats.fps))}onWindowResize(){var aspectRatio=this.VueCanvas.data.aspectRatio,screenWidth=this.container.clientWidth;if("auto"===aspectRatio)var screenHeight=this.container.clientHeight;else var screenHeight=this.container.clientWidth*aspectRatio;this.camera.aspect=screenWidth/screenHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(screenWidth,screenHeight,!1)}};